{"version":3,"sources":["webpack:///./src/components/ModalSelect/WarehouseLocation.vue?b80a","webpack:///./src/views/base/warehouse-location/tree.mixin.js","webpack:///./src/components/ModalSelect/WarehouseLocation.vue?123d","webpack:///src/components/ModalSelect/WarehouseLocation.vue","webpack:///./src/components/ModalSelect/WarehouseLocation.vue?2c78","webpack:///./src/components/ModalSelect/WarehouseLocation.vue","webpack:///./src/apis/modules/base/baseWarehouseLocation.js"],"names":["noCacheTreeMixins","data","treeRefName","defaultPropsMixins","children","label","isLeaf","hasleaf","treeLoadingMixins","treeQueryFocus","treeQueryMixins","treeDataMixins","defaultCheckedNodeMixins","defaultExpandKeysMixins","methods","getCurrentTreeStatus","this","$refs","getCurrentKey","handleRefreshTree","node","nodeInfo","initTreeMixins","then","setCurrentNode","handleNodeExpand","flag","some","item","id","push","collapseAllNodes","arr","result","i","length","Array","isArray","handleNodeCollapse","self","forEach","index","splice","isDel","includes","filter","k","resetCurrentNode","$nextTick","setCurrentKey","getNode","handleNodeClick","setPrevNode","curNode","parent","render","_vm","_h","$createElement","_c","_self","attrs","title","value","beforeClose","on","initSelect","staticClass","directives","name","rawName","expression","ref","scopedSlots","_u","key","fn","_v","_s","slot","confirmDialog","staticRenderFns","mixins","props","required","type","Boolean","String","default","multiple","max","Number","extraInfo","Object","disabled","level","tableSelection","Promise","code","resolve","res","reject","err","checked","setCheckedKeys","$emit","checkedKeys","handleDefault","done","component","getAddApi","request","url","method","getEditApi","getDeleteApi","getTreeListApi","timeout","getTreeNodeDetailApi","getChildNodeListApi","getBelowTheZoneListApi","getSapWarehouseListApi","getWarehouseDetailApi"],"mappings":"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","file":"js/InStorageInfoDelivery~OutBoundDelivery~OutBoundInfoReceipt.697d483e.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--8-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WarehouseLocation.vue?vue&type=style&index=0&id=2010e480&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/style-resources-loader/lib/index.js??ref--8-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WarehouseLocation.vue?vue&type=style&index=0&id=2010e480&lang=scss&scoped=true&\"","/*\r\n*   获取树，非懒加载\r\n*/\r\nexport const noCacheTreeMixins = {\r\n  data() {\r\n    return {\r\n      treeRefName: 'tree',\r\n      defaultPropsMixins: {\r\n        children: 'children',\r\n        label: 'name',\r\n        isLeaf: (data) => {\r\n          return !data.hasleaf\r\n        }\r\n      },\r\n      treeLoadingMixins: false,\r\n      // 树搜索\r\n      treeQueryFocus: false, // 搜索输入框是否聚焦\r\n      treeQueryMixins: '',\r\n      // 树所需数据\r\n      treeDataMixins: [],\r\n      defaultCheckedNodeMixins: '', // 存放当前默认展开的节点的id\r\n      defaultExpandKeysMixins: [] // 存放当前默认展开的节点的id\r\n    }\r\n  },\r\n  methods: {\r\n    getCurrentTreeStatus() {\r\n      this.defaultCheckedNodeMixins = this.$refs[this.treeRefName].getCurrentKey()\r\n    },\r\n    handleRefreshTree() {\r\n      this.defaultCheckedNodeMixins = this.$refs[this.treeRefName].getCurrentKey()\r\n      const node = this.nodeInfo\r\n      this.initTreeMixins().then(() => {\r\n        this.setCurrentNode(node)\r\n      })\r\n    },\r\n    /*\r\n    *  节点展开时记录当前展开的节点\r\n    */\r\n    handleNodeExpand(data) {\r\n      let flag = false\r\n      this.defaultExpandKeysMixins.some(item => {\r\n        if (item === data.id) {\r\n          flag = true\r\n          return true\r\n        }\r\n      })\r\n      if (!flag) {\r\n        this.defaultExpandKeysMixins.push(data.id)\r\n      }\r\n    },\r\n    /**\r\n     * 当前关闭节点下的所有节点id\r\n     */\r\n    collapseAllNodes(arr) {\r\n      let result = []\r\n      for (let i = 0; i < arr.length; i++) {\r\n        result.push(arr[i].id)\r\n        if (Array.isArray(arr[i].children)) {\r\n          result = [...result, ...this.collapseAllNodes(arr[i].children)]\r\n        }\r\n      }\r\n      return result\r\n    },\r\n    /**\r\n     * 节点关闭时同步当前展开的节点\r\n     * @param {*} data 该节点所对应的对象\r\n     */\r\n    handleNodeCollapse(data, node, self) {\r\n      this.defaultExpandKeysMixins.forEach((item, index) => {\r\n        if (item === data.id) {\r\n          this.defaultExpandKeysMixins.splice(index, 1)\r\n          // 删除关闭节点的下级已打开的节点id\r\n          if (data.children && Array.isArray(data.children)) {\r\n            this.defaultExpandKeysMixins.forEach(id => {\r\n              // 1、判断关闭节点下级所有的节点id是否存在打开的节点id\r\n              const isDel = this.collapseAllNodes(data.children).includes(id)\r\n              // 2、如果有的话将它从已打开数组里面剔除\r\n              isDel && (this.defaultExpandKeysMixins = this.defaultExpandKeysMixins.filter(k => k !== id))\r\n            })\r\n          }\r\n          // console.log(6666666, data.children && this.collapseAllNodes(data.children))\r\n          // console.log(8888888, data.children && [...new Set(this.collapseAllNodes(data.children))])\r\n        }\r\n      })\r\n    },\r\n    /*\r\n    * 1. 清除当前选中节点，并设置 $attrs.node 为空\r\n    */\r\n    resetCurrentNode() {\r\n      console.log('开始执行退出')\r\n      this.nodeInfo = {}\r\n      this.initTreeMixins().then(() => {\r\n        this.$nextTick(() => {\r\n          this.$refs[this.treeRefName].setCurrentKey()\r\n        })\r\n      })\r\n    },\r\n    /*\r\n    * 2. 选中指定节点\r\n    */\r\n    setCurrentNode(data) {\r\n      console.log('开始执行选中制定节点', data)\r\n      // 1. 清空\r\n      this.$nextTick(() => {\r\n        this.$refs[this.treeRefName].setCurrentKey()\r\n        // 2. 选中\r\n        this.$nextTick(() => {\r\n          this.$refs[this.treeRefName].setCurrentKey(data.id)\r\n          // 右侧选中\r\n          const node = this.$refs[this.treeRefName].getNode(data.id)\r\n          this.handleNodeClick(node.data, node)\r\n        })\r\n      })\r\n    },\r\n    /*\r\n    * 选中上一个节点\r\n    */\r\n    setPrevNode() {\r\n      const curNode = this.$refs[this.treeRefName].getNode(this.nodeInfo.id)\r\n      console.log('当前节点', curNode)\r\n      if (curNode && curNode.parent) {\r\n        console.log('当前父节点', curNode.parent)\r\n        const node = curNode.parent.data\r\n        this.defaultCheckedNodeMixins = node.id\r\n        this.initTreeMixins().then(() => {\r\n          this.setCurrentNode(node)\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-dialog',{attrs:{\"title\":_vm.title,\"top\":\"5vh\",\"visible\":_vm.value,\"show-close\":true,\"width\":\"400px\",\"lock-scroll\":false,\"destroy-on-close\":true,\"append-to-body\":true,\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"before-close\":_vm.beforeClose},on:{\"open\":_vm.initSelect}},[_c('el-scrollbar',{staticClass:\"scroll-dialog\"},[_c('el-row',{staticClass:\"connection-line\"},[_c('el-tree',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.treeLoadingMixins),expression:\"treeLoadingMixins\"}],ref:_vm.treeRefName,attrs:{\"data\":_vm.treeDataMixins,\"indent\":0,\"props\":_vm.defaultPropsMixins,\"highlight-current\":\"\",\"check-strictly\":true,\"node-key\":\"id\",\"default-expand-all\":\"\",\"lazy\":false,\"expand-on-click-node\":false,\"default-expanded-keys\":_vm.defaultExpandKeysMixins,\"current-node-key\":_vm.defaultCheckedNodeMixins,\"show-checkbox\":\"\"},on:{\"check-change\":_vm.handleNodeClick},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar data = ref.data;\nreturn _c('span',{staticClass:\"custom-tree-node\"},[[_c('span',[_vm._v(_vm._s(data.name))])]],2)}}])})],1)],1),_c('div',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmDialog}},[_vm._v(\"确 定\")]),_c('el-button',{on:{\"click\":_vm.beforeClose}},[_vm._v(\"取 消\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <el-dialog\r\n    :title=\"title\"\r\n    top=\"5vh\"\r\n    :visible=\"value\"\r\n    :show-close=\"true\"\r\n    width=\"400px\"\r\n    :lock-scroll=\"false\"\r\n    :destroy-on-close=\"true\"\r\n    :append-to-body=\"true\"\r\n    :close-on-click-modal=\"false\"\r\n    :close-on-press-escape=\"false\"\r\n    :before-close=\"beforeClose\"\r\n    @open=\"initSelect\"\r\n  >\r\n    <el-scrollbar class=\"scroll-dialog\">\r\n      <!-- 树上方搜索栏 -->\r\n      <!-- <el-row class=\"tree-top-query-wrapper\">\r\n          <el-input v-model=\"treeQueryMixins\" placeholder=\"编码或名称搜索\" class=\"table-query-input\" @focus=\"treeQueryFocus = true\" @blur=\"treeQueryFocus = false\" />\r\n          <div class=\"table-query-icon-wrapper\">\r\n            <i />\r\n            <svg-icon :class=\"{'table-query-icon-loudou': true, active: treeQueryFocus}\" icon-class=\"search\" class=\"baseQuery\" @click=\"initTreeMixins()\" />\r\n            <i />\r\n            <el-badge class=\"no-caret\">\r\n              <svg-icon :class=\"{'table-query-icon-loudou': true }\" icon-class=\"refresh\" @click=\"treeQueryMixins = '';initTreeMixins()\" />\r\n            </el-badge>\r\n          </div>\r\n        </el-row> -->\r\n      <!-- 树的结构 -->\r\n      <el-row class=\"connection-line\">\r\n        <el-tree\r\n          :ref=\"treeRefName\"\r\n          v-loading=\"treeLoadingMixins\"\r\n          :data=\"treeDataMixins\"\r\n          :indent=\"0\"\r\n          :props=\"defaultPropsMixins\"\r\n          highlight-current\r\n          :check-strictly=\"true\"\r\n          node-key=\"id\"\r\n          default-expand-all\r\n          :lazy=\"false\"\r\n          :expand-on-click-node=\"false\"\r\n          :default-expanded-keys=\"defaultExpandKeysMixins\"\r\n          :current-node-key=\"defaultCheckedNodeMixins\"\r\n          show-checkbox\r\n          @check-change=\"handleNodeClick\"\r\n        >\r\n          <span slot-scope=\"{ data }\" class=\"custom-tree-node\">\r\n            <!-- 根节点 -->\r\n            <template>\r\n              <span>{{ data.name }}</span>\r\n            </template>\r\n          </span>\r\n        </el-tree>\r\n      </el-row>\r\n    </el-scrollbar>\r\n    <div slot=\"footer\">\r\n      <!-- <el-button type=\"text\" @click=\"handleDefault\">重置筛选项</el-button> -->\r\n      <el-button type=\"primary\" @click=\"confirmDialog\">确 定</el-button>\r\n      <el-button @click=\"beforeClose\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { noCacheTreeMixins } from '@/views/base/warehouse-location/tree.mixin'\r\nimport { getTreeListApi as getTreeSelectApi } from '@/apis/modules/base/baseWarehouseLocation'\r\n\r\nexport default {\r\n  name: 'WarehouseLocationSelect',\r\n  mixins: [noCacheTreeMixins],\r\n  props: {\r\n    value: {\r\n      required: true,\r\n      type: Boolean\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: '库位选择'\r\n    },\r\n    // 是否多选，如果多选，返回id的数组， 如果单选返回 {id, name}\r\n    multiple: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    // 多选状态下的最大选择数量\r\n    max: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    extraInfo: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      defaultPropsMixins: {\r\n        children: 'children',\r\n        label: 'name',\r\n        isLeaf: (data) => {\r\n          return !data.hasleaf\r\n        },\r\n        disabled: function(data, node) {\r\n          if (data.level !== 4) {\r\n            return true\r\n          }\r\n        }\r\n      },\r\n      tableSelection: []\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取树\r\n    initTreeMixins(params = { produceResourceType: 4 }) {\r\n      return new Promise((resolve, reject) => {\r\n        this.treeLoadingMixins = true\r\n        getTreeSelectApi({\r\n          ...params,\r\n          ...this.extraInfo\r\n        }).then(res => {\r\n          const { code, data } = res\r\n          if (!code) {\r\n            this.treeDataMixins = data\r\n          }\r\n          this.treeLoadingMixins = false\r\n          resolve(res)\r\n        }).catch(err => {\r\n          this.treeLoadingMixins = false\r\n          reject(err)\r\n        })\r\n      })\r\n    },\r\n    handleNodeClick(data, checked, node) {\r\n      if (checked && !this.multiple) { // 非多选情况\r\n        this.tableSelection = data\r\n        this.$refs[this.treeRefName].setCheckedKeys([data.id])\r\n      }\r\n    },\r\n    confirmDialog() {\r\n      const checkedKeys = this.$refs[this.treeRefName].getCheckedNodes()\r\n      this.$emit('confirm', checkedKeys)\r\n      this.beforeClose()\r\n    },\r\n    initSelect() {\r\n      this.initTreeMixins()\r\n    },\r\n    handleDefault() {\r\n      this.tableSelection = new Array(0)\r\n    },\r\n    beforeClose(done) {\r\n      this.$emit('input', false)\r\n      this.handleDefault()\r\n      typeof done === 'function' && done()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.scroll-dialog {\r\n  height: 440px;\r\n}\r\n::v-deep .el-scrollbar .el-scrollbar__wrap {\r\n  overflow-x: hidden;\r\n}\r\n ::v-deep .el-dialog__body {\r\n  padding-bottom: 0;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WarehouseLocation.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WarehouseLocation.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WarehouseLocation.vue?vue&type=template&id=2010e480&scoped=true&\"\nimport script from \"./WarehouseLocation.vue?vue&type=script&lang=js&\"\nexport * from \"./WarehouseLocation.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WarehouseLocation.vue?vue&type=style&index=0&id=2010e480&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2010e480\",\n  null\n  \n)\n\nexport default component.exports","import request from '@/apis/request.wms'\r\n\r\n// 列表\r\nexport function getListApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/pageList',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 下拉列表\r\nexport function getPullListItemApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/listItem',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 新增\r\nexport function getAddApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/add',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 修改\r\nexport function getEditApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/edit',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 删除\r\nexport function getDeleteApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/delete',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n// 懒加载查询\r\nexport function getLazySearchApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/childrenList',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 库位树列表\r\nexport function getTreeListApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/treeList',\r\n    method: 'post',\r\n    data,\r\n    timeout: 5 * 60 * 1000\r\n  })\r\n}\r\n\r\n// 点击树查询右侧详情\r\nexport function getTreeNodeDetailApi(data) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/detail',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 查询权限内仓库列表\r\nexport function getWarehouseListApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseSap/listAllNameAndId',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 仓库下边的子节点查询(展开层级)\r\nexport function getChildNodeListApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/childrenList',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取区级以下的数据\r\nexport function getBelowTheZoneListApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseStorageLocation/treeListByParentId',\r\n    method: 'post',\r\n    data,\r\n    timeout: 5 * 60 * 1000 // 单位(ms)\r\n  })\r\n}\r\n\r\n// sap仓库\r\nexport function getSapWarehouseListApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouse/listItem',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 仓库详情接口(参数：id)\r\nexport function getWarehouseDetailApi(data = {}) {\r\n  return request({\r\n    url: '/basic/wmsWarehouseSap/detail',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n"],"sourceRoot":""}